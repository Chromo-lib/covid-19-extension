[{"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\state\\GlobalState.js":"1","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\LocalDefaultCountries.js":"2","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\TabWorld.js":"3","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\components\\ListCountries.js":"4","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\index.js":"5","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\CovidService.js":"6","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\components\\Footer.js":"7","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\SwitchTab.js":"8","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\SplitUpper.js":"9","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\EnglishMonths.js":"10","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\tabGlobal\\ChartGlobal.js":"11","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\tabGlobal\\InfosGlobal.js":"12","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\tabGlobal\\TabGlobal.js":"13","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\statistics\\TabStatisticsCountry.js":"14","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\statistics\\CountryInfos.js":"15","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\statistics\\CountryChart.js":"16","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\App.js":"17","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\milliToTime.js":"18","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\TabHome.js":"19","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\FormatNum.js":"20","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\ChartColors.js":"21","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\components\\HeaderInlineList.js":"22"},{"size":540,"mtime":1603286619111,"results":"23","hashOfConfig":"24"},{"size":929,"mtime":1603286383558,"results":"25","hashOfConfig":"24"},{"size":2515,"mtime":1612091687386,"results":"26","hashOfConfig":"24"},{"size":5281,"mtime":1612091642510,"results":"27","hashOfConfig":"24"},{"size":277,"mtime":1603286906619,"results":"28","hashOfConfig":"24"},{"size":2868,"mtime":1603286792110,"results":"29","hashOfConfig":"24"},{"size":284,"mtime":1603286630342,"results":"30","hashOfConfig":"24"},{"size":615,"mtime":1606597861863,"results":"31","hashOfConfig":"24"},{"size":130,"mtime":1603286373484,"results":"32","hashOfConfig":"24"},{"size":217,"mtime":1603286319609,"results":"33","hashOfConfig":"24"},{"size":692,"mtime":1606598685281,"results":"34","hashOfConfig":"24"},{"size":715,"mtime":1612091304083,"results":"35","hashOfConfig":"24"},{"size":3554,"mtime":1606597729412,"results":"36","hashOfConfig":"24"},{"size":3043,"mtime":1606600945075,"results":"37","hashOfConfig":"24"},{"size":1779,"mtime":1606598394535,"results":"38","hashOfConfig":"24"},{"size":2326,"mtime":1612091844204,"results":"39","hashOfConfig":"24"},{"size":4451,"mtime":1608675677421,"results":"40","hashOfConfig":"24"},{"size":520,"mtime":1603286367565,"results":"41","hashOfConfig":"24"},{"size":16892,"mtime":1606599269985,"results":"42","hashOfConfig":"24"},{"size":338,"mtime":1603286328774,"results":"43","hashOfConfig":"24"},{"size":330,"mtime":1603286302402,"results":"44","hashOfConfig":"24"},{"size":565,"mtime":1603286634155,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1c4rhr9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\state\\GlobalState.js",[],["96","97"],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\LocalDefaultCountries.js",[],["98","99"],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\TabWorld.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\components\\ListCountries.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\index.js",[],["100","101"],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\CovidService.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\components\\Footer.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\SwitchTab.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\SplitUpper.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\EnglishMonths.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\tabGlobal\\ChartGlobal.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\tabGlobal\\InfosGlobal.js",["102"],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\tabGlobal\\TabGlobal.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\statistics\\TabStatisticsCountry.js",["103"],"import React, { lazy, Suspense, useContext, useEffect, useState } from 'react';\r\nimport { GlobalContext } from '../../state/GlobalState';\r\nimport CovidService from '../../CovidService';\r\nimport Spinner from '../../components/Spinner';\r\nimport EnglishMonths from '../../utils/EnglishMonths';\r\nimport LocalDefaultCountries from '../../utils/LocalDefaultCountries';\r\n\r\nconst CountryChart = lazy(() => import('./CountryChart'));\r\nconst CountryInfos = lazy(() => import('./CountryInfos'));\r\n\r\nexport default function TabStatisticsCountry () {\r\n\r\n  const { globalState, setGloablState } = useContext(GlobalContext);\r\n  const { clickedCountry, allCountries, defaultCountries } = globalState;\r\n\r\n  const [countryStats, setCountryStats] = useState(null);\r\n  const [selectedMonth, setSelectedMonth] = useState(100);\r\n\r\n  useEffect(() => {\r\n    if (clickedCountry) {\r\n      CovidService.statsByCountry(clickedCountry.country)\r\n        .then(resp => {\r\n          setCountryStats(resp);\r\n        })\r\n        .catch(err => { });\r\n    }\r\n  }, [clickedCountry.country]);\r\n\r\n  const onSelectMonth = (e) => {\r\n    setSelectedMonth(e.target.value);\r\n  }\r\n\r\n  const onPinCountryToHomeTab = () => {\r\n    const { country } = clickedCountry;\r\n    let isN = defaultCountries.some((cnt) => cnt.country === country);\r\n    if (!isN) {\r\n      let nd = allCountries.find((cnt) => cnt.country === country);\r\n      setGloablState({\r\n        ...globalState,\r\n        defaultCountries: [...defaultCountries, nd], currentTabId: 0, tabName: 'home'\r\n      });\r\n      LocalDefaultCountries.add(country);\r\n    }\r\n    else {\r\n      setGloablState({ ...globalState, currentTabId: 0, tabName: 'home' });\r\n    }\r\n  }\r\n\r\n  return (<div className=\"w-100 content p-10\">\r\n\r\n    <button className=\"w-100 mb-10\" title=\"Pin To Home Tab\" onClick={onPinCountryToHomeTab}>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 384 512\"><path fill=\"#000\" d=\"M298.028 214.267L285.793 96H328c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v48c0 13.255 10.745 24 24 24h42.207L85.972 214.267C37.465 236.82 0 277.261 0 328c0 13.255 10.745 24 24 24h136v104.007c0 1.242.289 2.467.845 3.578l24 48c2.941 5.882 11.364 5.893 14.311 0l24-48a8.008 8.008 0 0 0 .845-3.578V352h136c13.255 0 24-10.745 24-24-.001-51.183-37.983-91.42-85.973-113.733z\" /></svg>\r\n      <span className=\"text-uppercase\">Pin {clickedCountry.country} to home tab</span>\r\n    </button>\r\n\r\n    <Suspense fallback={<Spinner />}>\r\n      <CountryInfos clickedCountry={clickedCountry} />\r\n    </Suspense>\r\n\r\n    {countryStats && <div className=\"w-100 py-10\">\r\n      <select className=\"w-100\" name=\"months\" onChange={onSelectMonth}>\r\n        <option value={100}>Choose a month</option>\r\n        {Object.keys(countryStats).map((k) => <option key={k} value={k}>{EnglishMonths[k]}</option>)}\r\n      </select>\r\n\r\n      <Suspense fallback={<Spinner />}>\r\n        <CountryChart countryStats={countryStats} selectedMonth={selectedMonth} />\r\n      </Suspense>\r\n    </div>}\r\n  </div>);\r\n}\r\n","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\statistics\\CountryInfos.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\statistics\\CountryChart.js",["104"],"import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Spinner from '../../components/Spinner';\r\nimport { backgroundColor, borderColor } from '../../utils/ChartColors';\r\nimport EnglishMonths from '../../utils/EnglishMonths';\r\n\r\nconst chartOptions = {\r\n  scales: {\r\n    yAxes: [{\r\n      ticks: {\r\n        display:true,\r\n        beginAtZero: true,\r\n        fontColor: 'white'\r\n      },\r\n    }],\r\n    xAxes: [{\r\n      ticks: {\r\n        display:true,\r\n        fontColor: 'white'\r\n      },\r\n    }]\r\n  }\r\n}\r\n\r\nexport default function CountryChart ({ countryStats, selectedMonth }) {\r\n\r\n  const [state, setState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedMonth !== 100 && countryStats[selectedMonth]) {\r\n      let cm = countryStats[selectedMonth];\r\n      setState({\r\n        labels: ['Deaths', 'Confirmed', 'Active', 'Recovered'],\r\n        datasets: [{\r\n          label: 'Statistics for ' + EnglishMonths[selectedMonth],\r\n          data: [cm.Deaths, cm.Confirmed, cm.Active, cm.Recovered],\r\n          backgroundColor,\r\n          borderColor\r\n        }]\r\n      });\r\n    }\r\n    else {\r\n      setState({\r\n        labels: Object.keys(countryStats).map((r) => EnglishMonths[r]),\r\n        datasets: [{\r\n          label: 'Confirmed ',\r\n          data: Object.values(countryStats).map((r) => r.Confirmed),\r\n          backgroundColor: backgroundColor[1],\r\n          borderColor: borderColor[1]\r\n        },\r\n        {\r\n          label: 'Deaths ',\r\n          data: Object.values(countryStats).map((r) => r.Deaths),\r\n          backgroundColor: backgroundColor[0],\r\n          borderColor: borderColor[0]\r\n        },\r\n        {\r\n          label: 'Active ',\r\n          data: Object.values(countryStats).map((r) => r.Active),\r\n          backgroundColor: backgroundColor[2],\r\n          borderColor: borderColor[2]\r\n        },\r\n        {\r\n          label: 'Recovered ',\r\n          data: Object.values(countryStats).map((r) => r.Recovered),\r\n          backgroundColor: backgroundColor[3],\r\n          borderColor: borderColor[3]\r\n        }]\r\n      })\r\n    }\r\n  }, [selectedMonth]);\r\n\r\n  if (state) {\r\n    return <Bar\r\n      data={state}\r\n      height={270}\r\n      legend={{ labels: { fontColor: \"white\" } }}\r\n      options={chartOptions}\r\n    />\r\n  }\r\n  else {\r\n    return <Spinner />\r\n  }\r\n}","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\App.js",["105"],"import React, { Suspense, useEffect, useContext } from 'react';\nimport { GlobalContext } from './state/GlobalState';\n\nimport Spinner from './components/Spinner';\nimport CovidService from './CovidService';\n\nimport { commarize } from './utils/FormatNum';\n\nconst SwitchTabs = React.lazy(() => import('./tabs/SwitchTab'));\nconst Footer = React.lazy(() => import('./components/Footer'));\n\nlet chrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)\n  ? window.chrome : window.browser;\n\nconst tabsIcons = [\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" viewBox=\"0 0 576 512\"><path fill=\"#fff\" d=\"M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\"></path></svg>,\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" viewBox=\"0 0 496 512\"><path fill=\"#fff\" d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm200 248c0 22.5-3.9 44.2-10.8 64.4h-20.3c-4.3 0-8.4-1.7-11.4-4.8l-32-32.6c-4.5-4.6-4.5-12.1.1-16.7l12.5-12.5v-8.7c0-3-1.2-5.9-3.3-8l-9.4-9.4c-2.1-2.1-5-3.3-8-3.3h-16c-6.2 0-11.3-5.1-11.3-11.3 0-3 1.2-5.9 3.3-8l9.4-9.4c2.1-2.1 5-3.3 8-3.3h32c6.2 0 11.3-5.1 11.3-11.3v-9.4c0-6.2-5.1-11.3-11.3-11.3h-36.7c-8.8 0-16 7.2-16 16v4.5c0 6.9-4.4 13-10.9 15.2l-31.6 10.5c-3.3 1.1-5.5 4.1-5.5 7.6v2.2c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8s-3.6-8-8-8H247c-3 0-5.8 1.7-7.2 4.4l-9.4 18.7c-2.7 5.4-8.2 8.8-14.3 8.8H194c-8.8 0-16-7.2-16-16V199c0-4.2 1.7-8.3 4.7-11.3l20.1-20.1c4.6-4.6 7.2-10.9 7.2-17.5 0-3.4 2.2-6.5 5.5-7.6l40-13.3c1.7-.6 3.2-1.5 4.4-2.7l26.8-26.8c2.1-2.1 3.3-5 3.3-8 0-6.2-5.1-11.3-11.3-11.3H258l-16 16v8c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8v-20c0-2.5 1.2-4.9 3.2-6.4l28.9-21.7c1.9-.1 3.8-.3 5.7-.3C358.3 56 448 145.7 448 256zM130.1 149.1c0-3 1.2-5.9 3.3-8l25.4-25.4c2.1-2.1 5-3.3 8-3.3 6.2 0 11.3 5.1 11.3 11.3v16c0 3-1.2 5.9-3.3 8l-9.4 9.4c-2.1 2.1-5 3.3-8 3.3h-16c-6.2 0-11.3-5.1-11.3-11.3zm128 306.4v-7.1c0-8.8-7.2-16-16-16h-20.2c-10.8 0-26.7-5.3-35.4-11.8l-22.2-16.7c-11.5-8.6-18.2-22.1-18.2-36.4v-23.9c0-16 8.4-30.8 22.1-39l42.9-25.7c7.1-4.2 15.2-6.5 23.4-6.5h31.2c10.9 0 21.4 3.9 29.6 10.9l43.2 37.1h18.3c8.5 0 16.6 3.4 22.6 9.4l17.3 17.3c3.4 3.4 8.1 5.3 12.9 5.3H423c-32.4 58.9-93.8 99.5-164.9 103.1z\"></path></svg>,\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" viewBox=\"0 0 24 24\" stroke=\"#fff\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" /></svg>\n];\n\nconst tabs = [\n  { id: 0, name: 'home', icon: tabsIcons[0] },\n  { id: 1, name: 'world', icon: tabsIcons[1] },\n  { id: 2, name: 'global', icon: tabsIcons[2] }\n];\n\nfunction App () {\n\n  const { globalState, setGloablState } = useContext(GlobalContext);\n\n  useEffect(() => {\n    CovidService.allCountries()\n      .then((countries) => {\n\n        setGloablState({\n          ...globalState,\n          allCountries: countries[1],\n          defaultCountries: countries[0]\n        });\n\n        chrome.browserAction.setBadgeText({ text: '+' + commarize(countries[0][0].todayCases) });\n      })\n      .catch(e => { });\n  }, []);\n\n  const onTabChange = (currentTabId) => {\n    setGloablState({ ...globalState, currentTabId, tabName: tabs[currentTabId].name });\n  }\n\n  return (\n    <div className=\"App\">\n\n      <ul className=\"tabs d-flex col-3 bg-dark\">\n        {tabs.map(tab => <li key={tab.id}\n          onClick={() => { onTabChange(tab.id) }}\n          className={globalState.currentTabId === tab.id ? 'active-tab' : ''}>\n          {tab.icon}{tab.name}</li>)}\n      </ul>\n\n      <Suspense fallback={<Spinner />}>\n        {globalState.allCountries.length > 0\n          ? <SwitchTabs\n            currentTabId={globalState.currentTabId}\n            defaultCountries={globalState.defaultCountries}\n            allCountries={globalState.allCountries} tabName=\"world\"\n          />\n          : <Spinner />}\n\n        <Footer />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\milliToTime.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\tabs\\TabHome.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\FormatNum.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\utils\\ChartColors.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\covidnow-spa\\src\\components\\HeaderInlineList.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"106","replacedBy":"112"},{"ruleId":"108","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":9,"column":43,"nodeType":"116","messageId":"117","endLine":9,"endColumn":45},{"ruleId":"118","severity":1,"message":"119","line":27,"column":6,"nodeType":"120","endLine":27,"endColumn":30,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":71,"column":6,"nodeType":"120","endLine":71,"endColumn":21,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":44,"column":6,"nodeType":"120","endLine":44,"endColumn":8,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],["126"],["127"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clickedCountry'. Either include it or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has a missing dependency: 'countryStats'. Either include it or remove the dependency array. If 'setState' needs the current value of 'countryStats', you can also switch to useReducer instead of useState and read 'countryStats' in the reducer.",["129"],"React Hook useEffect has missing dependencies: 'globalState' and 'setGloablState'. Either include them or remove the dependency array.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [clickedCountry, clickedCountry.country]",{"range":"137","text":"138"},"Update the dependencies array to be: [countryStats, selectedMonth]",{"range":"139","text":"140"},"Update the dependencies array to be: [globalState, setGloablState]",{"range":"141","text":"142"},[1028,1052],"[clickedCountry, clickedCountry.country]",[2098,2113],"[countryStats, selectedMonth]",[3597,3599],"[globalState, setGloablState]"]